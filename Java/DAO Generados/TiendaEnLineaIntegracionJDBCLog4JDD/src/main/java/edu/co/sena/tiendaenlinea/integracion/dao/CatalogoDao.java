/*
 * This source file was generated by FireStorm/DAO.
 * 
 * If you purchase a full license for FireStorm/DAO you can customize this header file.
 * 
 * For more information please visit http://www.codefutures.com/products/firestorm
 */

package edu.co.sena.tiendaenlinea.integracion.dao;

import edu.co.sena.tiendaenlinea.integracion.dto.*;
import edu.co.sena.tiendaenlinea.integracion.exceptions.*;

public interface CatalogoDao
{
	/** 
	 * Inserts a new row in the catalogo table.
	 */
	public CatalogoPk insert(Catalogo dto) throws CatalogoDaoException;

	/** 
	 * Updates a single row in the catalogo table.
	 */
	public void update(CatalogoPk pk, Catalogo dto) throws CatalogoDaoException;

	/** 
	 * Deletes a single row in the catalogo table.
	 */
	public void delete(CatalogoPk pk) throws CatalogoDaoException;

	/** 
	 * Returns the rows from the catalogo table that matches the specified primary-key value.
	 */
	public Catalogo findByPrimaryKey(CatalogoPk pk) throws CatalogoDaoException;

	/** 
	 * Returns all rows from the catalogo table that match the criteria 'idCatalogo = :idCatalogo'.
	 */
	public Catalogo findByPrimaryKey(int idCatalogo) throws CatalogoDaoException;

	/** 
	 * Returns all rows from the catalogo table that match the criteria ''.
	 */
	public Catalogo[] findAll() throws CatalogoDaoException;

	/** 
	 * Returns all rows from the catalogo table that match the criteria 'idCatalogo = :idCatalogo'.
	 */
	public Catalogo[] findWhereIdCatalogoEquals(int idCatalogo) throws CatalogoDaoException;

	/** 
	 * Returns all rows from the catalogo table that match the criteria 'nombreCatalogo = :nombreCatalogo'.
	 */
	public Catalogo[] findWhereNombreCatalogoEquals(String nombreCatalogo) throws CatalogoDaoException;

	/** 
	 * Returns all rows from the catalogo table that match the criteria 'descripcion = :descripcion'.
	 */
	public Catalogo[] findWhereDescripcionEquals(String descripcion) throws CatalogoDaoException;

	/** 
	 * Sets the value of maxRows
	 */
	public void setMaxRows(int maxRows);

	/** 
	 * Gets the value of maxRows
	 */
	public int getMaxRows();

	/** 
	 * Returns all rows from the catalogo table that match the specified arbitrary SQL statement
	 */
	public Catalogo[] findByDynamicSelect(String sql, Object[] sqlParams) throws CatalogoDaoException;

	/** 
	 * Returns all rows from the catalogo table that match the specified arbitrary SQL statement
	 */
	public Catalogo[] findByDynamicWhere(String sql, Object[] sqlParams) throws CatalogoDaoException;

}
