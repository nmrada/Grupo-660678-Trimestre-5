/*
 * This source file was generated by FireStorm/DAO.
 * 
 * If you purchase a full license for FireStorm/DAO you can customize this header file.
 * 
 * For more information please visit http://www.codefutures.com/products/firestorm
 */

package edu.co.sena.tiendaenlinea.integracion.dao;

import edu.co.sena.tiendaenlinea.integracion.dto.*;
import edu.co.sena.tiendaenlinea.integracion.exceptions.*;

public interface CarritodecomprasDao
{
	/** 
	 * Inserts a new row in the carritodecompras table.
	 */
	public CarritodecomprasPk insert(Carritodecompras dto) throws CarritodecomprasDaoException;

	/** 
	 * Updates a single row in the carritodecompras table.
	 */
	public void update(CarritodecomprasPk pk, Carritodecompras dto) throws CarritodecomprasDaoException;

	/** 
	 * Deletes a single row in the carritodecompras table.
	 */
	public void delete(CarritodecomprasPk pk) throws CarritodecomprasDaoException;

	/** 
	 * Returns the rows from the carritodecompras table that matches the specified primary-key value.
	 */
	public Carritodecompras findByPrimaryKey(CarritodecomprasPk pk) throws CarritodecomprasDaoException;

	/** 
	 * Returns all rows from the carritodecompras table that match the criteria 'idCarritoDeCompras = :idCarritoDeCompras'.
	 */
	public Carritodecompras findByPrimaryKey(String idCarritoDeCompras) throws CarritodecomprasDaoException;

	/** 
	 * Returns all rows from the carritodecompras table that match the criteria ''.
	 */
	public Carritodecompras[] findAll() throws CarritodecomprasDaoException;

	/** 
	 * Returns all rows from the carritodecompras table that match the criteria 'idCarritoDeCompras = :idCarritoDeCompras'.
	 */
	public Carritodecompras[] findWhereIdCarritoDeComprasEquals(String idCarritoDeCompras) throws CarritodecomprasDaoException;

	/** 
	 * Returns all rows from the carritodecompras table that match the criteria 'subtotal = :subtotal'.
	 */
	public Carritodecompras[] findWhereSubtotalEquals(float subtotal) throws CarritodecomprasDaoException;

	/** 
	 * Returns all rows from the carritodecompras table that match the criteria 'precioTotal = :precioTotal'.
	 */
	public Carritodecompras[] findWherePrecioTotalEquals(float precioTotal) throws CarritodecomprasDaoException;

	/** 
	 * Returns all rows from the carritodecompras table that match the criteria 'impuestos = :impuestos'.
	 */
	public Carritodecompras[] findWhereImpuestosEquals(float impuestos) throws CarritodecomprasDaoException;

	/** 
	 * Sets the value of maxRows
	 */
	public void setMaxRows(int maxRows);

	/** 
	 * Gets the value of maxRows
	 */
	public int getMaxRows();

	/** 
	 * Returns all rows from the carritodecompras table that match the specified arbitrary SQL statement
	 */
	public Carritodecompras[] findByDynamicSelect(String sql, Object[] sqlParams) throws CarritodecomprasDaoException;

	/** 
	 * Returns all rows from the carritodecompras table that match the specified arbitrary SQL statement
	 */
	public Carritodecompras[] findByDynamicWhere(String sql, Object[] sqlParams) throws CarritodecomprasDaoException;

}
